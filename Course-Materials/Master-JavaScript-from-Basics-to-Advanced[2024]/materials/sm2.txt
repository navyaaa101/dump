Document Object Model:
    when a web page is loaded, the browser creates a document object Model of the page. It is the tree representation of the HTML document. This DOM tree can be modified with the help of javascript
    Javascript and DOM:
        javascript can add new HTML elements and attributes
        Javascript can change any HTML elements and attribute in the page
        Javascript can change all the CSS styles in the page
        Javascript can remove existing HTML element and attributes
        Javascript can add and listen to HTML events like onClick, onScoll etc

Querry Selectors:
    Querry Selectors allow you to use CSS Selectors to select HTML elements, It is the new way in Javascript to select HTML elements.
        - querrySelector()
        - querrySelectorAll()

Javascript events:
    when some action happens in the webpage, that action is called event.
    -using Event properties
    -using addEventListener()

The mordern browsers give us access to a property called 'classList'. This classList holds all the classes of an HTML elements.

Form events:
    change: the change event is triggered when the content of an input field is changed or when the user selects a value from the dropdown etc.
    focus: the focus event is triggered when the input field is focused by the user.
    blur: the blur event is triggered when the input field looses focus.
    submit: the submit event is triggered when the submit button is clicked by the user.

Keyboard events:
    the Keyboard events are triggeredn when the user clicks a key from the Keyboard
    -keydown, keyup(after keydown), keypress(any except shift, function, capslock is pressed).

Mouse events:
    the mouse events are triggered when the different mouse keys are pressed and/or released.
    -mousedown, mouseup, click, dblclick, mouseover, mouseenter, mousemove



Javascript functions:
    getElementById() -> getElementById is a DOM method. It accepts HTML elementId and returns the HTML element mathing that Id.
                        The element of and Id must be passed as an argument, if no element matches the Id then it returns null.
    getElementByClassName ->getElementByClassName is a DOM method. It accepts HTML class string and returns the HTML element mathing that class.
                        The element of and Id must be passed as an argument, if no element matches the class name then it returns empty array. 
    getElementByTagName ->getElementByTagName is a DOM method. It accepts HTML tag string and returns the HTML element mathing that tag.
                        The element of and tag must be passed as an argument, if no element matches the tag then it returns empty array.                     
    querrySelector() -> querrySelector is a DOM method. It accepts the CSS Selector string and returns the HTML element mathing that querry.
                        The element of and selector must be passed as an argument, if no element matches the selector then it returns null.
    querrySelectorAll() -> querrySelectorAll is a DOM method. It accepts the CSS Selector string and returns all the HTML elements mathing that querry.
                        The elements of and selector must be passed as an argument, if no elements matches the selector then it returns an empty array.
    selectedElement.style.{propertyName} = value; -> This way the style of the HTML elements can be changed
    selectedElement.{eventProperty} = function(){} -> gives an event function body on a particulat instance or condition
    selectedElement.addEventListener({eventName},function(){}) -> gives an event function body on a particulat instance or condition
    Math.random() -> returns a random value between 0-1 in decimal
    Math.floor() -> returns the nearest floor value or the integer part of the given number
    selectedElement.('selector')/querrySelector('selector) -> This way the selector like a class of the HTML elements can be change
    selectedElement.classList() -> returns the objects i.e classes inside the element
    selectedElement.classList.add() -> this function adds the argument passed classname to the css stylesheet
    selectedElement.classList.remove() -> this function removes the argument passed classname to the css stylesheet
    selectedElement.classList.contains() -> this function returns the boolean whether the argumentpassedis present or not
    selectTimeout(function,params) -> executes the function after params miliseconds
    window.getComputedStyle() - > retuns the object of the passed argument value
    createElement() -> creates a new element and can be strored in any variable
    createTextNode() -> can be used to enter the text into the created element
    variable.id = '' -> can be used to allocate an id to the newly created node
    childElementCount -> returns the number of elements in a particular list
    insertBefore() -> is used as the appendChild() but adds an element before the given element
    